trigger:
  - master

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: "mezzo-dev-aks-variable-group"
  

steps:
  - task: Docker@2
    inputs:
      command: 'login'
      containerRegistry: 'acr'

  - task: Docker@2
    inputs:
      command: 'buildAndPush'
      repository: '$(ACR_NAME)/$(IMAGE_NAME)'
      dockerfile: 'Dockerfile'
      tags: '$(IMAGE_TAG)'
  - task: Kubernetes@1
    inputs:
      connectionType: 'Kubernetes Service Connection'
      kubernetesServiceEndpoint: 'test1'
      command: 'apply'
      arguments: '-f k8s/deployment.yml'
      secretType: 'dockerRegistry'
      containerRegistryType: 'Azure Container Registry'

  # Step 4: Deploy the Docker image to AKS using the service YAML file
  - task: Kubernetes@1
    inputs:
      connectionType: 'Kubernetes Service Connection'
      kubernetesServiceEndpoint: 'test1'
      command: 'apply'
      arguments: '-f k8s/service.yaml'
      secretType: 'dockerRegistry'
      containerRegistryType: 'Azure Container Registry'

  # Step 5: Update the Deployment to use the latest image from ACR
  - task: Kubernetes@1
    inputs:
      connectionType: 'Kubernetes Service Connection'
      kubernetesServiceEndpoint: 'test1'
      command: 'set'
      arguments: 'image deployment/myapp-deployment myapp=$(ACR_NAME).azurecr.io/$(IMAGE_NAME):$(IMAGE_TAG)'
      secretType: 'dockerRegistry'
      containerRegistryType: 'Azure Container Registry'

  # Step 6: Restart deployment to apply changes
  #- task: Kubernetes@1
  #  inputs:
  #    connectionType: 'Kubernetes Service Connection'
  #    kubernetesServiceEndpoint: 'test1'
  #    command: 'rollout'
  #    arguments: 'restart deployment/myapp-deployment'
  #   secretType: 'dockerRegistry'
  #    containerRegistryType: 'Azure Container Registry'